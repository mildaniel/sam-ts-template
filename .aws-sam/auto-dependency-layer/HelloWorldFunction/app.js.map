{
  "version": 3,
  "sources": ["../../../../../../../../private/var/folders/bm/btw1pphn0v1_7jxyj25b1z500000gr/T/tmp4w601tyi/app.ts"],
  "sourcesContent": ["import axios from \"axios\";\nimport { APIGatewayProxyEvent, APIGatewayProxyResult } from \"aws-lambda\";\nimport { ServerResponse, LambdaResponse } from \"./interfaces\"\n\nconst url = 'http://checkip.amazonaws.com/';\nlet response: LambdaResponse;\n\nexport const handler = async (event: APIGatewayProxyEvent): Promise<APIGatewayProxyResult> => {\n    // const name: string = \"Jimmy\"\n    // let val: number = 10\n    // val = name\n\n    const requestId = event.requestContext.requestId;\n    try {\n        const ret: ServerResponse = await axios(url);\n        response = {\n            'statusCode': 200,\n            'body': JSON.stringify({\n                message: 'hello world!!',\n                location: ret.data.trim(),\n                requestId: requestId,\n                // invalid_typescript: val,\n            })\n        }\n    } catch (err) {\n        response = {\n            'statusCode': 500,\n            'body': JSON.stringify({\n                message: err,\n            })\n        }\n    }\n\n    return response;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAIlB,IAAM,MAAM;AACZ,IAAI;AAEG,IAAM,UAAU,OAAO,UAAgE;AAK1F,QAAM,YAAY,MAAM,eAAe;AACvC,MAAI;AACA,UAAM,MAAsB,MAAM,0BAAM;AACxC,eAAW;AAAA,MACP,cAAc;AAAA,MACd,QAAQ,KAAK,UAAU;AAAA,QACnB,SAAS;AAAA,QACT,UAAU,IAAI,KAAK;AAAA,QACnB;AAAA;AAAA;AAAA,WAIH,KAAP;AACE,eAAW;AAAA,MACP,cAAc;AAAA,MACd,QAAQ,KAAK,UAAU;AAAA,QACnB,SAAS;AAAA;AAAA;AAAA;AAKrB,SAAO;AAAA;",
  "names": []
}
